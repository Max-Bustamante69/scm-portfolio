---
import ExperienceCard from "./ExperienceCard.astro";
import ExperienceSummary from "./ExperienceSummary.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type Experience = CollectionEntry<"experiences">;

const experiences: Experience[] = await getCollection("experiences");
const selectedClass = "bg-secondary/40";
const selectedIndex = 0;
---

<section
  id="experience-selector"
  aria-label="Professional Experience"
  class="flex w-full gap-12 lg:justify-between flex-col lg:flex-row"
>
  <div
    class="flex lg:w-2/3 lg:max-w-[400px] flex-col gap-2"
    role="tablist"
    aria-orientation="vertical"
    aria-label="Experience tabs"
  >
    {
      experiences.map((experience, index) => {
        const { jobTitle, companyName, icon } = experience.data;
        return (
          <div role="presentation">
            <ExperienceSummary
              role="tab"
              id={`experience-tab-${index}`}
              aria-selected={index === selectedIndex}
              aria-controls={`experience-panel-${index}`}
              tabindex={index === selectedIndex ? 0 : -1}
              data-experience-index={index}
              class={index === selectedIndex ? selectedClass : ""}
              jobTitle={jobTitle}
              companyName={companyName}
              icon={icon}
            />
          </div>
        );
      })
    }
  </div>

  <div class="relative lg:w-1/2">
    {
      experiences.map((experience, index) => {
        const {
          jobTitle,
          companyName,
          startDate,
          endDate,
          skills,
          description,
          icon,
        } = experience.data;
        return (
          <div
            role="tabpanel"
            id={`experience-panel-${index}`}
            aria-labelledby={`experience-tab-${index}`}
            tabindex="0"
            class={index === selectedIndex ? "block" : "hidden"}
            hidden={index !== selectedIndex}
          >
            <ExperienceCard
              jobTitle={jobTitle}
              companyName={companyName}
              startDate={startDate}
              endDate={endDate}
              skills={skills}
              description={description}
              icon={icon}
            />
          </div>
        );
      })
    }
  </div>
</section>

<script>
  const selectedClass = "bg-secondary/40";
  const tabs = document.querySelectorAll<HTMLElement>('[role="tab"]');
  const panels = document.querySelectorAll<HTMLElement>('[role="tabpanel"]');
  let currentIndex = 0;

  function switchTab(index: number) {
    const oldTab = tabs[currentIndex];
    const newTab = tabs[index];

    // Update tabs
    oldTab.setAttribute("aria-selected", "false");
    oldTab.classList.remove(selectedClass);
    oldTab.tabIndex = -1;

    newTab.setAttribute("aria-selected", "true");
    newTab.classList.add(selectedClass);
    newTab.tabIndex = 0;
    newTab.focus();

    // Update panels
    panels[currentIndex].hidden = true;
    panels[currentIndex].classList.add("hidden");
    panels[currentIndex].classList.remove("block");

    panels[index].hidden = false;
    panels[index].classList.remove("hidden");
    panels[index].classList.add("block");

    currentIndex = index;
  }

  // Handle clicks
  tabs.forEach((tab) => {
    tab.addEventListener("click", () => {
      const index = Number(tab.getAttribute("data-experience-index"));
      switchTab(index);
    });
  });

  // Handle keyboard navigation
  tabs.forEach((tab) => {
    tab.addEventListener("keydown", (e: KeyboardEvent) => {
      let targetIndex = currentIndex;

      switch (e.key) {
        case "ArrowUp":
          e.preventDefault();
          targetIndex = currentIndex > 0 ? currentIndex - 1 : tabs.length - 1;
          break;
        case "ArrowDown":
          e.preventDefault();
          targetIndex = currentIndex < tabs.length - 1 ? currentIndex + 1 : 0;
          break;
        case "Home":
          e.preventDefault();
          targetIndex = 0;
          break;
        case "End":
          e.preventDefault();
          targetIndex = tabs.length - 1;
          break;
        default:
          return;
      }

      switchTab(targetIndex);
    });
  });
</script>
